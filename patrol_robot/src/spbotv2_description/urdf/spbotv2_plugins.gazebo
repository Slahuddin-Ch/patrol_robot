<?xml version="1.0" ?>
<robot name="spbot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<gazebo>
<plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
			<!-- Set control loop update rate -->
			<updateRate>100</updateRate>
				
			<!-- Name of left joint, defaults to `left_joint` -->
			<leftJoint>left_wheel_joint</leftJoint>

			<!-- Name of right joint, defaults to `right_joint` -->
			<rightJoint>right_wheel_joint</rightJoint>

			<publish_rate>10</publish_rate>

			<!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
			<wheelSeparation>0.55</wheelSeparation>

			<!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
			<wheelDiameter>0.15</wheelDiameter>

			<!-- Topics -->
			<commandTopic>cmd_vel</commandTopic>
			<odometryTopic>odom</odometryTopic>

			<!-- Set if odom required -->
			<publishOdom>true</publishOdom>
			<publishOdomTF>true</publishOdomTF>

			<publishTF>true</publishTF>

			<!-- Frame IDs -->
			<odometryFrame>odom</odometryFrame>
			<robotBaseFrame>base_link</robotBaseFrame>

			<odometrySource>world</odometrySource>

			<!-- Set odom covariance -->
			<covariance_x>0.0001</covariance_x>
			<covariance_y>0.0001</covariance_y>
			<covariance_z>0.0001</covariance_z>
		</plugin>
	</gazebo>
	
	<gazebo>
         <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
          <gazebo_ros_control>
           <emergency_stop_topic>emergency_stop</emergency_stop_topic>
          </gazebo_ros_control>
         </plugin>
        </gazebo>


	
	<gazebo reference="laser_link_1">
		<sensor name="front_rplidar" type="ray">
			<always_on>true</always_on>
			<visualize>false</visualize>
			<pose>0 0 5.016 0 0 0</pose>
			<update_rate>100</update_rate>
			<ray>
			  <scan>
				<horizontal>
				  <samples>360</samples>
				  <resolution>1.000000</resolution>
				  <min_angle>1.0835</min_angle>
				  <max_angle>-1.0875</max_angle>
				</horizontal>
			  </scan>
			  <range>
				<min>0.07</min>
				<max>1000</max>
				<resolution>0.015000</resolution>
			  </range>
			  <noise>
				<type>gaussian</type>
				<mean>0.0</mean>
				<stddev>0.01</stddev>
			  </noise>
			</ray>
			<plugin name="gazebo_ros_front_rplidar_controller" filename="libgazebo_ros_laser.so">
				<topicName>/scan</topicName>
				<frameName>laser_link_1</frameName>
			</plugin>
		  </sensor>
	</gazebo>
	
	<!-- camera -->
  	<gazebo reference="camera_link">
    	<sensor type="camera" name="camera">
      	<update_rate>30.0</update_rate>
      	<camera name="head">
        	<horizontal_fov>1.3962634</horizontal_fov>
        	<image>
         	<width>800</width>
          	<height>800</height>
          	<format>R8G8B8</format>
        	</image>
        	<clip>
          	<near>0.02</near>
          	<far>300</far>
        	</clip>
        	<noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!--Kinect Camera-->
  <gazebo reference="kinect_camera">
  <sensor name="kinect_camera" type="depth">
    <update_rate>20</update_rate>
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <cameraName>kinect_ir</cameraName>
      <imageTopicName>kinect/image_raw</imageTopicName>
      <cameraInfoTopicName>kinect/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/kinect/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>/kinect/depth/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>/kinect/depth/points</pointCloudTopicName>
      <frameName>kinect_camera</frameName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>

	
	
</robot>
